-- Enhanced UI Library with Improved Design // ZypherUI

if game.CoreGui:FindFirstChild('PScreen') then game.CoreGui.PScreen:Destroy() end

local tween = game:GetService('TweenService')
local UserInputService = game:GetService("UserInputService")

local library = {}

library.UICorner = function(a, b) 
	local _instance = Instance.new('UICorner', b)
	_instance.CornerRadius = UDim.new(0, a)
end

library.UIStroke = function(b, thickness, color)
	local _instance = Instance.new('UIStroke', b)
	_instance.Thickness = thickness
	_instance.Color = color or Color3.new(0.2, 0.2, 0.2)
	_instance.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	_instance.LineJoinMode = Enum.LineJoinMode.Round
end

library.Warn = function(title, desc)
	local screen = Instance.new('ScreenGui', game.Players.LocalPlayer.PlayerGui)
	
	local WarnFrame = Instance.new("Frame")
	WarnFrame.Name = "WarnFrame"
	WarnFrame.Parent = screen
	WarnFrame.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	WarnFrame.BorderSizePixel = 0
	WarnFrame.Position = UDim2.new(0, -300, 0, 3)
	WarnFrame.Size = UDim2.new(0, 220, 0, 53)
	library.UICorner(4, WarnFrame)
	library.UIStroke(WarnFrame, 1, Color3.new(0.3, 0.3, 0.3))
	
	local Image = Instance.new("ImageLabel")
	Image.Name = "Image"
	Image.Parent = WarnFrame
	Image.BackgroundColor3 = Color3.new(1, 1, 1)
	Image.BackgroundTransparency = 1
	Image.BorderSizePixel = 0
	Image.Position = UDim2.new(0, 0, -0.0754716992, 0)
	Image.Size = UDim2.new(0, 29, 0, 29)
	Image.Image = "rbxassetid://3944704135"
	Image.ScaleType = Enum.ScaleType.Fit
	
	local Title = Instance.new("TextLabel")
	Title.Name = "Title"
	Title.Parent = WarnFrame
	Title.BackgroundColor3 = Color3.new(1, 1, 1)
	Title.BackgroundTransparency = 1
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0.168181822, 0, 0, 0)
	Title.Size = UDim2.new(0, 183, 0, 21)
	Title.Font = Enum.Font.GothamSemibold
	Title.Text = title
	Title.TextColor3 = Color3.new(1, 1, 1)
	Title.TextSize = 17
	Title.TextXAlignment = Enum.TextXAlignment.Left
	
	local Desc = Instance.new("TextLabel")
	Desc.Name = "Desc"
	Desc.Parent = WarnFrame
	Desc.BackgroundColor3 = Color3.new(1, 1, 1)
	Desc.BackgroundTransparency = 1
	Desc.BorderSizePixel = 0
	Desc.Position = UDim2.new(0.0136363637, 0, 0.396226406, 0)
	Desc.Size = UDim2.new(0, 214, 0, 30)
	Desc.Font = Enum.Font.Gotham
	Desc.Text = desc
	Desc.TextColor3 = Color3.new(1, 1, 1)
	Desc.TextSize = 14
	Desc.TextWrapped = true
	Desc.TextXAlignment = Enum.TextXAlignment.Left
	Desc.TextYAlignment = Enum.TextYAlignment.Top
	
	tween:Create(WarnFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 3, 0, 3)}):Play()
	wait(2)
	tween:Create(WarnFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, -300, 0, 3)}):Play()
	wait(0.5)
	screen:Destroy()
end

function library:Main()
    local main = {}
    local screen = Instance.new('ScreenGui', game.CoreGui)
    screen.Name = 'PScreen'

    local PanelContainer = Instance.new("Frame")
    PanelContainer.Name = "PanelContainer"
    PanelContainer.Parent = screen
    PanelContainer.BackgroundColor3 = Color3.new(0.0352941, 0.0352941, 0.0352941)
    PanelContainer.BorderSizePixel = 0
    PanelContainer.Position = UDim2.new(0.5, -175, 0.5, -115)
    PanelContainer.Size = UDim2.new(0, 350, 0, 250)
    library.UICorner(8, PanelContainer)
    library.UIStroke(PanelContainer, 2, Color3.new(0.1, 0.1, 0.1))

    -- Drag functionality
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        PanelContainer.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    PanelContainer.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = PanelContainer.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    PanelContainer.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    -- Header with title
    local Header = Instance.new("Frame")
    Header.Name = "Header"
    Header.Parent = PanelContainer
    Header.BackgroundColor3 = Color3.new(0.08, 0.08, 0.08)
    Header.BorderSizePixel = 0
    Header.Size = UDim2.new(1, 0, 0, 30)
    library.UICorner(8, Header)
    library.UIStroke(Header, 1, Color3.new(0.2, 0.2, 0.2))

    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = Header
    Title.BackgroundColor3 = Color3.new(1, 1, 1)
    Title.BackgroundTransparency = 1
    Title.BorderSizePixel = 0
    Title.Size = UDim2.new(1, 0, 1, 0)
    Title.Font = Enum.Font.GothamBold
    Title.Text = "Zypher UI"
    Title.TextColor3 = Color3.new(1, 1, 1)
    Title.TextSize = 16

    -- Tabs Container (Top)
    local TabContainerTop = Instance.new("Frame")
    TabContainerTop.Name = "TabContainerTop"
    TabContainerTop.Parent = PanelContainer
    TabContainerTop.BackgroundColor3 = Color3.new(0.06, 0.06, 0.06)
    TabContainerTop.BorderSizePixel = 0
    TabContainerTop.Position = UDim2.new(0, 5, 0, 35)
    TabContainerTop.Size = UDim2.new(1, -10, 0, 30)
    library.UICorner(6, TabContainerTop)
    library.UIStroke(TabContainerTop, 1, Color3.new(0.15, 0.15, 0.15))

    local TabScrollContainer = Instance.new("ScrollingFrame")
    TabScrollContainer.Name = "TabScrollContainer"
    TabScrollContainer.Parent = TabContainerTop
    TabScrollContainer.Active = true
    TabScrollContainer.BackgroundColor3 = Color3.new(1, 1, 1)
    TabScrollContainer.BackgroundTransparency = 1
    TabScrollContainer.BorderSizePixel = 0
    TabScrollContainer.Size = UDim2.new(1, 0, 1, 0)
    TabScrollContainer.CanvasSize = UDim2.new(0, 0, 0, 0)
    TabScrollContainer.ScrollBarThickness = 3
    TabScrollContainer.ScrollBarImageColor3 = Color3.new(0.3, 0.3, 0.3)
    TabScrollContainer.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Left

    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.Parent = TabScrollContainer
    TabListLayout.FillDirection = Enum.FillDirection.Horizontal
    TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabListLayout.Padding = UDim.new(0, 5)

    local TabPadding = Instance.new("UIPadding")
    TabPadding.Parent = TabScrollContainer
    TabPadding.PaddingLeft = UDim.new(0, 5)
    TabPadding.PaddingTop = UDim.new(0, 5)

    -- Main Content Area
    local ContentArea = Instance.new("Frame")
    ContentArea.Name = "ContentArea"
    ContentArea.Parent = PanelContainer
    ContentArea.BackgroundColor3 = Color3.new(0.08, 0.08, 0.08)
    ContentArea.BorderSizePixel = 0
    ContentArea.Position = UDim2.new(0, 5, 0, 70)
    ContentArea.Size = UDim2.new(1, -10, 1, -75)
    library.UICorner(6, ContentArea)
    library.UIStroke(ContentArea, 1, Color3.new(0.15, 0.15, 0.15))

    local ContentScrollContainer = Instance.new("ScrollingFrame")
    ContentScrollContainer.Name = "ContentScrollContainer"
    ContentScrollContainer.Parent = ContentArea
    ContentScrollContainer.Active = true
    ContentScrollContainer.BackgroundColor3 = Color3.new(1, 1, 1)
    ContentScrollContainer.BackgroundTransparency = 1
    ContentScrollContainer.BorderSizePixel = 0
    ContentScrollContainer.Size = UDim2.new(1, 0, 1, 0)
    ContentScrollContainer.CanvasSize = UDim2.new(0, 0, 0, 0)
    ContentScrollContainer.ScrollBarThickness = 4
    ContentScrollContainer.ScrollBarImageColor3 = Color3.new(0.3, 0.3, 0.3)

    local ContentLayout = Instance.new("UIListLayout")
    ContentLayout.Parent = ContentScrollContainer
    ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ContentLayout.Padding = UDim.new(0, 5)

    local ContentPadding = Instance.new("UIPadding")
    ContentPadding.Parent = ContentScrollContainer
    ContentPadding.PaddingLeft = UDim.new(0, 8)
    ContentPadding.PaddingRight = UDim.new(0, 8)
    ContentPadding.PaddingTop = UDim.new(0, 8)
    ContentPadding.PaddingBottom = UDim.new(0, 8)

    local folder1 = Instance.new('Folder', ContentScrollContainer)

    local firstTab = true
    local tabCount = 0

    function main:Tab(name)
        local tab = {}
        local selected = false
        tabCount = tabCount + 1

        -- Update canvas size for horizontal scrolling
        TabScrollContainer.CanvasSize = UDim2.new(0, (tabCount * 85), 0, 0)

        local Content = Instance.new("ScrollingFrame")
        Content.Name = "Content_" .. name
        Content.Parent = folder1
        Content.Active = true
        Content.BackgroundColor3 = Color3.new(1, 1, 1)
        Content.BackgroundTransparency = 1
        Content.BorderSizePixel = 0
        Content.Size = UDim2.new(1, 0, 1, 0)
        Content.CanvasSize = UDim2.new(0, 0, 0, 0)
        Content.ScrollBarThickness = 4
        Content.ScrollBarImageColor3 = Color3.new(0.3, 0.3, 0.3)
        Content.Visible = false

        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.Parent = Content
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 8)

        local UIPadding = Instance.new("UIPadding")
        UIPadding.Parent = Content
        UIPadding.PaddingLeft = UDim.new(0, 5)
        UIPadding.PaddingRight = UDim.new(0, 5)
        UIPadding.PaddingTop = UDim.new(0, 5)

        -- Tab Button (Now in top container)
        local TabButton = Instance.new("TextButton")
        TabButton.Name = "TabButton_" .. name
        TabButton.Parent = TabScrollContainer
        TabButton.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
        TabButton.BorderSizePixel = 0
        TabButton.Size = UDim2.new(0, 80, 0, 20)
        TabButton.AutoButtonColor = false
        TabButton.Font = Enum.Font.Gotham
        TabButton.Text = name
        TabButton.TextColor3 = Color3.new(0.8, 0.8, 0.8)
        TabButton.TextSize = 13
        TabButton.TextWrapped = true
        library.UICorner(4, TabButton)
        library.UIStroke(TabButton, 1, Color3.new(0.3, 0.3, 0.3))

        -- Hover effects
        TabButton.MouseEnter:Connect(function()
            if not selected then
                tween:Create(TabButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)}):Play()
            end
        end)

        TabButton.MouseLeave:Connect(function()
            if not selected then
                tween:Create(TabButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)}):Play()
            end
        end)

        if firstTab then 
            selected = true
            firstTab = false
            TabButton.BackgroundColor3 = Color3.new(0.2, 0.4, 0.8)
            TabButton.TextColor3 = Color3.new(1, 1, 1)
            Content.Visible = true
        end

        TabButton.MouseButton1Down:Connect(function()
            for i, v in pairs(TabScrollContainer:GetChildren()) do
                if v:IsA('TextButton') then
                    tween:Create(v, TweenInfo.new(0.2), {
                        BackgroundColor3 = Color3.new(0.1, 0.1, 0.1),
                        TextColor3 = Color3.new(0.8, 0.8, 0.8)
                    }):Play()
                end
            end
            for i, v in pairs(folder1:GetChildren()) do
                v.Visible = false
            end
            tween:Create(TabButton, TweenInfo.new(0.3), {
                BackgroundColor3 = Color3.new(0.2, 0.4, 0.8),
                TextColor3 = Color3.new(1, 1, 1)
            }):Play()
            Content.Visible = true
            selected = true
        end)

        function tab:Section(name)
            local section = {}

            local SectionContainer = Instance.new("Frame")
            SectionContainer.Name = "SectionContainer"
            SectionContainer.Parent = Content
            SectionContainer.BackgroundColor3 = Color3.new(0.06, 0.06, 0.06)
            SectionContainer.BorderSizePixel = 0
            SectionContainer.Size = UDim2.new(1, 0, 0, 0)
            SectionContainer.AutomaticSize = Enum.AutomaticSize.Y
            library.UICorner(6, SectionContainer)
            library.UIStroke(SectionContainer, 1, Color3.new(0.2, 0.2, 0.2))

            local SectionLayout = Instance.new("UIListLayout")
            SectionLayout.Parent = SectionContainer
            SectionLayout.SortOrder = Enum.SortOrder.LayoutOrder
            SectionLayout.Padding = UDim.new(0, 5)

            local SectionPadding = Instance.new("UIPadding")
            SectionPadding.Parent = SectionContainer
            SectionPadding.PaddingLeft = UDim.new(0, 8)
            SectionPadding.PaddingRight = UDim.new(0, 8)
            SectionPadding.PaddingTop = UDim.new(0, 8)
            SectionPadding.PaddingBottom = UDim.new(0, 8)

            local SectionHeader = Instance.new("TextLabel")
            SectionHeader.Name = "SectionHeader"
            SectionHeader.Parent = SectionContainer
            SectionHeader.BackgroundColor3 = Color3.new(1, 1, 1)
            SectionHeader.BackgroundTransparency = 1
            SectionHeader.BorderSizePixel = 0
            SectionHeader.Size = UDim2.new(1, 0, 0, 20)
            SectionHeader.Font = Enum.Font.GothamBold
            SectionHeader.Text = name
            SectionHeader.TextColor3 = Color3.new(1, 1, 1)
            SectionHeader.TextSize = 14
            SectionHeader.TextXAlignment = Enum.TextXAlignment.Left

            function section:Item(type, name, callback, options)
                local item = {}
                options = options or {}

                if type:lower() == 'label' then
                    local Label = Instance.new("TextLabel")
                    Label.Name = "Label"
                    Label.Parent = SectionContainer
                    Label.BackgroundColor3 = Color3.new(1, 1, 1)
                    Label.BackgroundTransparency = 1
                    Label.BorderSizePixel = 0
                    Label.Size = UDim2.new(1, 0, 0, 18)
                    Label.Font = Enum.Font.Gotham
                    Label.Text = name
                    Label.TextColor3 = Color3.new(0.8, 0.8, 0.8)
                    Label.TextSize = 13
                    Label.TextXAlignment = Enum.TextXAlignment.Left

                elseif type:lower() == 'button' then
                    local Button = Instance.new("TextButton")
                    Button.Name = "Button"
                    Button.Parent = SectionContainer
                    Button.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
                    Button.BorderSizePixel = 0
                    Button.Size = UDim2.new(1, 0, 0, 25)
                    Button.AutoButtonColor = false
                    Button.Font = Enum.Font.Gotham
                    Button.TextColor3 = Color3.new(0.9, 0.9, 0.9)
                    Button.TextSize = 13
                    Button.Text = name
                    library.UICorner(4, Button)
                    library.UIStroke(Button, 1, Color3.new(0.3, 0.3, 0.3))

                    -- Hover effects
                    Button.MouseEnter:Connect(function()
                        tween:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)}):Play()
                    end)

                    Button.MouseLeave:Connect(function()
                        tween:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)}):Play()
                    end)

                    Button.MouseButton1Down:Connect(function()
                        tween:Create(Button, TweenInfo.new(0.1), {BackgroundColor3 = Color3.new(0.2, 0.4, 0.8)}):Play()
                        wait(0.1)
                        tween:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)}):Play()
                        if callback then
                            callback()
                        end
                    end)

                elseif type:lower() == 'textbox' then
                    local TextBoxContainer = Instance.new("Frame")
                    TextBoxContainer.Name = "TextBoxContainer"
                    TextBoxContainer.Parent = SectionContainer
                    TextBoxContainer.BackgroundColor3 = Color3.new(1, 1, 1)
                    TextBoxContainer.BackgroundTransparency = 1
                    TextBoxContainer.BorderSizePixel = 0
                    TextBoxContainer.Size = UDim2.new(1, 0, 0, 25)
                    
                    local TextBoxLabel = Instance.new("TextLabel")
                    TextBoxLabel.Name = "TextBoxLabel"
                    TextBoxLabel.Parent = TextBoxContainer
                    TextBoxLabel.BackgroundColor3 = Color3.new(1, 1, 1)
                    TextBoxLabel.BackgroundTransparency = 1
                    TextBoxLabel.BorderSizePixel = 0
                    TextBoxLabel.Size = UDim2.new(0.4, 0, 1, 0)
                    TextBoxLabel.Font = Enum.Font.Gotham
                    TextBoxLabel.Text = name
                    TextBoxLabel.TextColor3 = Color3.new(0.8, 0.8, 0.8)
                    TextBoxLabel.TextSize = 13
                    TextBoxLabel.TextXAlignment = Enum.TextXAlignment.Left

                    local TextBox = Instance.new("TextBox")
                    TextBox.Name = "TextBox"
                    TextBox.Parent = TextBoxContainer
                    TextBox.BackgroundColor3 = Color3.new(0.08, 0.08, 0.08)
                    TextBox.BorderSizePixel = 0
                    TextBox.Position = UDim2.new(0.45, 0, 0.1, 0)
                    TextBox.Size = UDim2.new(0.55, 0, 0.8, 0)
                    TextBox.ClearTextOnFocus = false
                    TextBox.Font = Enum.Font.Gotham
                    TextBox.PlaceholderColor3 = Color3.new(0.5, 0.5, 0.5)
                    TextBox.PlaceholderText = options.Placeholder or "Enter text..."
                    TextBox.Text = options.Default or ""
                    TextBox.TextColor3 = Color3.new(1, 1, 1)
                    TextBox.TextSize = 13
                    library.UICorner(4, TextBox)
                    library.UIStroke(TextBox, 1, Color3.new(0.3, 0.3, 0.3))

                    TextBox.FocusLost:Connect(function(enterPressed)
                        if enterPressed and callback then
                            callback(TextBox.Text)
                        end
                    end)

                elseif type:lower() == 'slider' then
                    local Min = options.Min or 0
                    local Max = options.Max or 100
                    local Default = options.Default or Min
                    local Value = Default

                    local SliderContainer = Instance.new("Frame")
                    SliderContainer.Name = "SliderContainer"
                    SliderContainer.Parent = SectionContainer
                    SliderContainer.BackgroundColor3 = Color3.new(1, 1, 1)
                    SliderContainer.BackgroundTransparency = 1
                    SliderContainer.BorderSizePixel = 0
                    SliderContainer.Size = UDim2.new(1, 0, 0, 35)
                    
                    local SliderLabel = Instance.new("TextLabel")
                    SliderLabel.Name = "SliderLabel"
                    SliderLabel.Parent = SliderContainer
                    SliderLabel.BackgroundColor3 = Color3.new(1, 1, 1)
                    SliderLabel.BackgroundTransparency = 1
                    SliderLabel.BorderSizePixel = 0
                    SliderLabel.Size = UDim2.new(1, 0, 0, 15)
                    SliderLabel.Font = Enum.Font.Gotham
                    SliderLabel.Text = name .. ": " .. Value
                    SliderLabel.TextColor3 = Color3.new(0.8, 0.8, 0.8)
                    SliderLabel.TextSize = 13
                    SliderLabel.TextXAlignment = Enum.TextXAlignment.Left

                    local SliderBackground = Instance.new("Frame")
                    SliderBackground.Name = "SliderBackground"
                    SliderBackground.Parent = SliderContainer
                    SliderBackground.BackgroundColor3 = Color3.new(0.08, 0.08, 0.08)
                    SliderBackground.BorderSizePixel = 0
                    SliderBackground.Position = UDim2.new(0, 0, 0.5, 0)
                    SliderBackground.Size = UDim2.new(1, 0, 0, 6)
                    library.UICorner(3, SliderBackground)
                    library.UIStroke(SliderBackground, 1, Color3.new(0.3, 0.3, 0.3))

                    local SliderFill = Instance.new("Frame")
                    SliderFill.Name = "SliderFill"
                    SliderFill.Parent = SliderBackground
                    SliderFill.BackgroundColor3 = Color3.new(0.2, 0.4, 0.8)
                    SliderFill.BorderSizePixel = 0
                    SliderFill.Size = UDim2.new((Default - Min) / (Max - Min), 0, 1, 0)
                    library.UICorner(3, SliderFill)

                    local SliderButton = Instance.new("TextButton")
                    SliderButton.Name = "SliderButton"
                    SliderButton.Parent = SliderBackground
                    SliderButton.BackgroundColor3 = Color3.new(1, 1, 1)
                    SliderButton.BorderSizePixel = 0
                    SliderButton.Size = UDim2.new(0, 12, 0, 12)
                    SliderButton.Position = UDim2.new((Default - Min) / (Max - Min), -6, 0.5, -6)
                    SliderButton.AutoButtonColor = false
                    SliderButton.Text = ""
                    library.UICorner(6, SliderButton)
                    library.UIStroke(SliderButton, 1, Color3.new(0.5, 0.5, 0.5))

                    local function updateSlider(input)
                        local relativeX = (input.Position.X - SliderBackground.AbsolutePosition.X) / SliderBackground.AbsoluteSize.X
                        local newValue = math.floor(Min + (Max - Min) * math.clamp(relativeX, 0, 1))
                        
                        if newValue ~= Value then
                            Value = newValue
                            SliderLabel.Text = name .. ": " .. Value
                            local fillSize = (Value - Min) / (Max - Min)
                            
                            tween:Create(SliderFill, TweenInfo.new(0.1), {Size = UDim2.new(fillSize, 0, 1, 0)}):Play()
                            tween:Create(SliderButton, TweenInfo.new(0.1), {Position = UDim2.new(fillSize, -6, 0.5, -6)}):Play()
                            
                            if callback then
                                callback(Value)
                            end
                        end
                    end

                    SliderButton.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            local connection
                            connection = input.Changed:Connect(function()
                                if input.UserInputState == Enum.UserInputState.End then
                                    connection:Disconnect()
                                else
                                    updateSlider(input)
                                end
                            end)
                        end
                    end)

                    SliderBackground.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            updateSlider(input)
                        end
                    end)

                elseif type:lower() == 'toggle' then
                    local on = options.Default or false

                    local ToggleContainer = Instance.new("Frame")
                    ToggleContainer.Name = "ToggleContainer"
                    ToggleContainer.Parent = SectionContainer
                    ToggleContainer.BackgroundColor3 = Color3.new(1, 1, 1)
                    ToggleContainer.BackgroundTransparency = 1
                    ToggleContainer.BorderSizePixel = 0
                    ToggleContainer.Size = UDim2.new(1, 0, 0, 25)
                    
                    local ToggleLabel = Instance.new("TextLabel")
                    ToggleLabel.Name = "ToggleLabel"
                    ToggleLabel.Parent = ToggleContainer
                    ToggleLabel.BackgroundColor3 = Color3.new(1, 1, 1)
                    ToggleLabel.BackgroundTransparency = 1
                    ToggleLabel.BorderSizePixel = 0
                    ToggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
                    ToggleLabel.Font = Enum.Font.Gotham
                    ToggleLabel.Text = name
                    ToggleLabel.TextColor3 = Color3.new(0.8, 0.8, 0.8)
                    ToggleLabel.TextSize = 13
                    ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left

                    local ToggleButton = Instance.new("TextButton")
                    ToggleButton.Name = "ToggleButton"
                    ToggleButton.Parent = ToggleContainer
                    ToggleButton.BackgroundColor3 = on and Color3.new(0.2, 0.6, 1) or Color3.new(0.3, 0.3, 0.3)
                    ToggleButton.BorderSizePixel = 0
                    ToggleButton.Position = UDim2.new(0.8, 0, 0.2, 0)
                    ToggleButton.Size = UDim2.new(0.2, 0, 0.6, 0)
                    ToggleButton.AutoButtonColor = false
                    ToggleButton.Text = ""
                    library.UICorner(10, ToggleButton)
                    library.UIStroke(ToggleButton, 1, Color3.new(0.2, 0.2, 0.2))

                    local ToggleKnob = Instance.new("Frame")
                    ToggleKnob.Name = "ToggleKnob"
                    ToggleKnob.Parent = ToggleButton
                    ToggleKnob.BackgroundColor3 = Color3.new(1, 1, 1)
                    ToggleKnob.BorderSizePixel = 0
                    ToggleKnob.Size = UDim2.new(0.4, 0, 0.8, 0)
                    ToggleKnob.Position = on and UDim2.new(0.55, 0, 0.1, 0) or UDim2.new(0.05, 0, 0.1, 0)
                    library.UICorner(10, ToggleKnob)

                    ToggleButton.MouseButton1Down:Connect(function()
                        on = not on
                        if on then
                            tween:Create(ToggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.new(0.2, 0.6, 1)}):Play()
                            tween:Create(ToggleKnob, TweenInfo.new(0.2), {Position = UDim2.new(0.55, 0, 0.1, 0)}):Play()
                        else
                            tween:Create(ToggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)}):Play()
                            tween:Create(ToggleKnob, TweenInfo.new(0.2), {Position = UDim2.new(0.05, 0, 0.1, 0)}):Play()
                        end
                        if callback then
                            callback(on)
                        end
                    end)

                end

                -- Update content size
                Content.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y + 10)
                return item
            end
            return section
        end
        return tab
    end
    return main
end

return library
